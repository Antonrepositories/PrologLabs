animal(собака, має_шерсть, немає_крил).
animal(сапсан, немає_шерсті, має_крила).
animal(свиня, має_шерсть, немає_крил).
animal(сова, немає_шерсті, має_крила).
animal(сорока, немає_шерсті, має_крила).
animal(саламандра, немає_шерсті, немає_крил).
animal(снігурка, немає_шерсті, має_крила).
animal(сорокопуд, немає_шерсті, має_крила).

тварина_має_шерсть(X) :-
    animal(X, має_шерсть, _).

тварина_має_крила(X) :-
    animal(X, _, має_крила).

тварина_без_шерсті_і_крил(X) :-
    animal(X, немає_шерсті, немає_крил).

птах(X) :- animal(X, _, має_крила).

ссавець(X) :- animal(X, має_шерсть, немає_крил).

земноводна(X) :- animal(X, немає_шерсті, немає_крил).

хижак(X) :- animal(X, _, має_крила), (X = сапсан).

main :-
    інструкція,
    read_line_to_string(user_input, InputString),
    string_to_atom(InputString, Input),
    handle_input(Input).

інструкція :-
    write('Можливі команди:'), nl,
    write('  назва_тварини - для отримання інформації про конкретну тварину'), nl,
    write('  всі тварини з шерстю - для виведення списку тварин з шерстю'), nl,
    write('  всі тварини з крилами - для виведення списку тварин з крилами'), nl,
    write('  всі тварини без шерсті і крил - для виведення списку тварин без шерсті і крил'), nl,
    write('  всі хижаки - для виведення списку хижаків'), nl,
    write('  всі птахи - для виведення списку птахів'), nl,
    write('  всі земноводні - для виведення списку земноводних'), nl,
    write('  всі ссавці - для виведення списку ссавців'), nl,
    write('  вихід - для завершення програми'), nl,
    write('Введіть назву тварини або команду:'), nl.

handle_input('вихід') :-
    write('Програма завершена.'), nl.
handle_input(Input) :-
    ( Input == 'всі тварини з шерстю' -> список_тварин_з_шерстю
    ; Input == 'всі тварини з крилами' -> список_тварин_з_крилами
    ; Input == 'всі тварини без шерсті і крил' -> список_тварин_без_шерсті_і_крил
    ; Input == 'всі хижаки' -> список_хижаків
    ; Input == 'всі земноводні' -> список_земноводних
    ; Input == 'всі ссавці' -> список_ссавців
    ; Input == 'всі птахи' -> список_птахів
    ; інформація_про_тварину(Input)
    ),
    nl, main.

інформація_про_тварину(X) :-
    ( animal(X, _, _) ->
        ( тварина_має_шерсть(X) -> write(X), write(' має шерсть.'), nl ; true ),
        ( тварина_має_крила(X) -> write(X), write(' має крила.'), nl ; true ),
        ( тварина_без_шерсті_і_крил(X) -> write(X), write(' немає шерсті і крил.'), nl ; true ),
        ( птах(X) -> write(X), write(' є птахом.'), nl ; true ),
        ( ссавець(X) -> write(X), write(' є ссавцем.'), nl ; true ),
        ( земноводна(X) -> write(X), write(' є земноводною.'), nl ; true ),
        ( хижак(X) -> write(X), write(' є хижаком.'), nl ; true )
    ; write('Немає інформації про тварину '), write(X), write('.'), nl ).

список_тварин_з_шерстю :-
    findall(X, тварина_має_шерсть(X), List),
    write('Тварини з шерстю: '), write(List), nl.

список_тварин_з_крилами :-
    findall(X, тварина_має_крила(X), List),
    write('Тварини з крилами: '), write(List), nl.

список_тварин_без_шерсті_і_крил :-
    findall(X, тварина_без_шерсті_і_крил(X), List),
    write('Тварини без шерсті і крил: '), write(List), nl.

список_хижаків :-
    findall(X, хижак(X), List),
    write('Хижаки: '), write(List), nl.

список_земноводних :-
    findall(X, земноводна(X), List),
    write('Земноводні: '), write(List), nl.

список_ссавців :-
    findall(X, ссавець(X), List),
    write('Ссавці: '), write(List), nl.

список_птахів :-
    findall(X, птах(X), List),
    write('Птахи: '), write(List), nl.
